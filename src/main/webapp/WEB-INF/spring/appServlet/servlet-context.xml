<?xml version="1.0" encoding="UTF-8"?>
<!-- 
Spring MVC context 
@author David Meredith  
 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
     	http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- 
	mvc:annoation-driven Enables the Spring MVC @Controller programming model
	see: http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/mvc.html#mvc-config 
	-->
    <mvc:annotation-driven/>
    <context:component-scan base-package="uk.ac.ngs.controllers">
        <!-- If we use the include-filter as below, we should then i think use 
        use-default-filters="false" on the component-scan. However, i don't 
        think we need the below include-filter because we are just scanning 
        in our controllers package -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	
    <!-- <context:annotation-config/> only looks for annotations on beans in the same
	application context in which it is defined. This means that, if you put
	<context:annotation-config/> in a WebApplicationContext for a
	DispatcherServlet, it only checks for @Autowired beans in your controllers, and not
	your services. See Section 16.2, “The DispatcherServlet” for more information. --> 
    <context:annotation-config/>  

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	

</beans>
